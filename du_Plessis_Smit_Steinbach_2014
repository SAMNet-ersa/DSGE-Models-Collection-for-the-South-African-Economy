% Medium-sized small open economy model for South Africa
% Last edited: 14/12/12 by R. Steinbach

%===================================================================================================
% Housekeeping
%===================================================================================================
close all;

%===================================================================================================
% Declare endogenous variables
%===================================================================================================
var
%---------------------------------------------------------------------------------------------------
% Prices
%---------------------------------------------------------------------------------------------------
pi_cbar                 $\hat{\bar{\pi}}^c$     % Inflation target
pi_c                    $\hat{\pi}^c$           % CPI inflation
pi_i                    $\hat{\pi}^{i}$         % Investment price deflator inflation
pi_d                    $\hat{\pi}^{d}$         % Domestic goods inflation 
pi_mc                   $\hat{\pi}^{m,c}$       % Imported consumption good inflation
pi_mi                   $\hat{\pi}^{m,i}$       % Imported investment good inflation
pi_x                    $\hat{\pi}^{x}$         % Export good inflation

%---------------------------------------------------------------------------------------------------
% Marginal costs
%---------------------------------------------------------------------------------------------------
mc_d                    $\hat{mc}^{d}$          % Marginal cost: domestic good
mc_mc                   $\hat{mc}^{m,c}$        % Marginal cost: imported consumption good
mc_mi                   $\hat{mc}^{m,i}$        % Marginal cost: imported investment good
mc_x                    $\hat{mc}^{x}$          % Marginal cost: export good

%---------------------------------------------------------------------------------------------------
% Input costs
%---------------------------------------------------------------------------------------------------
r_k                     $\hat{r}^k$             % Rental rate of capital
w                       $\hat{w}$               % Real wage

%---------------------------------------------------------------------------------------------------
% Components of aggregate demand
%---------------------------------------------------------------------------------------------------
y                       $\hat{y}$               % Output    
c                       $\hat{c}$               % Consumption
i                       $\hat{i}$               % Investment
g                       $\hat{g}$               % Government spending
imp                     $\hat{imp}$             % Imports
ex                      $\hat{exp}$             % Exports

c_m                     $\hat{c}^m$             % Imported consumer goods
i_m                     $\hat{i}^m$             % Imported investment goods
i_d                     $\hat{i}^d$             % Domestic investment goods

%---------------------------------------------------------------------------------------------------
% Capital
%---------------------------------------------------------------------------------------------------
P_k                     $\hat{P}^k$             % Price of capital
mu_z                    $\hat{\mu}^z$           % Trend productivity
kbar                    $\hat{k}$               % Capital stock
k                       $\hat{k}^s$             % Capital services
u                       $\hat{u}$               % Capital utilisation

%---------------------------------------------------------------------------------------------------
% Exchange rate and interest 
%---------------------------------------------------------------------------------------------------
dS                      $\Delta\hat{S}$         % Nominal depreciation
x                       $\hat{x}$               % Real exchange rate
R                       $\hat{R}$               % Policy interest rate (repo)
a                       $\hat{a}$               % Net foreign assets
psi_z                   $\hat{\psi}^z$          % Optimal asset holdings

%---------------------------------------------------------------------------------------------------
% Labour market
%---------------------------------------------------------------------------------------------------
H                       $\hat{H}$               % Labour supply
E                       $\hat{E}$               % Employment

%---------------------------------------------------------------------------------------------------
% Relative prices (6)
%---------------------------------------------------------------------------------------------------
gamma_mcd               $\hat{\gamma}^{m,c,d}$ 
gamma_mid               $\hat{\gamma}^{m,i,d}$
gamma_xstar             $\hat{\gamma}^{x,*}$
gamma_cd                $\hat{\gamma}^{c,d}$
gamma_id                $\hat{\gamma}^{i,d}$
gamma_f                 $\hat{\gamma}^{f}$

% Foreign economy (3)
R_star                  $\hat{R}^{*}$
pi_star                 $\hat{\pi}^{*}$
y_star                  $\hat{y}^{*}$
e_ystar
e_pistar

% Annualised rates
R4                      $\hat{R}^{4}$
pi_d4                   $\hat{\pi}^{d,4}$
pi_c4                   $\hat{\pi}^{c,4}$
pi_mc4                  $\hat{\pi}^{mc,4}$
pi_mi4                  $\hat{\pi}^{mi,4}$
 
% AR(1) shock processes (11)
e_c                     $\hat{\xi}^{c}$
e_i                     $\hat{\xi}^{i}$
e_a                     $\hat{\tilde{\phi}}^{}$
e_z                     $\hat{\varepsilon}^{}$
e_H                     $\hat{\xi}^{H}$
lambda_x                $\hat{\lambda}^{x}$
lambda_d                $\hat{\lambda}^d$
lambda_mc               $\hat{\lambda}^{m,c}$
lambda_mi               $\hat{\lambda}^{m,i}$
z_tildestar             $\hat{\tilde{z}}^{*}$

% Observable variables
R_                      
pi_c_
pi_cbar_
pi_i_
pi_d_
dy_
dc_
di_
dimp_
dex_
dy_star_
pi_star_
R_star_
dE_
dS_
dw_

;

varexo

eps_c                       $\varepsilon^{c}$
eps_i                       $\varepsilon^{i}$
eps_g                       $\varepsilon^{g}$

eps_r                       $\varepsilon^{r}$
eps_a                       $\varepsilon^{a}$    
eps_z                       $\varepsilon^{z}$
eps_H                       $\varepsilon^{H}$
eps_pi_cbar                 $\varepsilon^{\bar{\pi}^c}$
eps_x                       $\varepsilon^{x}$
eps_d                       $\varepsilon^{d}$    
eps_mc                      $\varepsilon^{m,c}$
eps_mi                      $\varepsilon^{m,i}$
eps_z_tildestar             $\varepsilon^{\tilde{z}^*}$    
eps_mu_z                    $\varepsilon^{\mu^z}$    

eps_Rstar                   $\varepsilon^{R^*}$
eps_pistar                  $\varepsilon^{\pi^*}$
eps_ystar                   $\varepsilon^{y^*}$    


me_w 
me_E
me_pi_d
me_pi_i
me_y
me_c
me_i
me_imp
me_ex
me_ystar
;

parameters

beta        $\beta$     
delta       $\delta$   
alpha       $\alpha$   
A_L         $A_L$    
sigma_L     $\sigma_L$
A_q         $A_q$
sigma_q     $\sigma_q$
sigma_a     $\sigma_a$
b           $b$
phi_a       $\phi_a$
phi_s       $\phi_s$
phi_i       $\phi_i$
theta_w     $\theta_w$
theta_d     $\theta_d$    
theta_mc    $\theta_mc$    
theta_mi    $\theta_mi$    
theta_x     $\theta_x$    
theta_e     $\theta_e$    
kappa_w     $\kappa_w$    
kappa_d     $\kappa_d$    
kappa_mc    $\kappa_mc$
kappa_mi    $\kappa_mi$
kappa_x     $\kappa_x$
omega_i     $\vartheta_i$
omega_c     $\vartheta_c$
eta_c       $\eta_c$
eta_i       $\eta_i$
eta_f       $\eta_f$
rho_r       $\rho_R$
r_pi        $\phi_{\pi}$
r_y         $\phi_{y}$
r_x         $\phi_{x}$
r_dpi       $\phi_{\Delta\pi}$
r_dy        $\phi_{\Delta y}$
rho_pi      $\rho_{\pi}$  
mu_m_ss     $\mu^m$
gr          $gr$
nu_ss       $\nu$
mu_z_ss     $\mu^z$
lambda_d_ss $\lambda^d$ 
lambda_mc_ss $\lambda^mc$
lambda_mi_ss $\lambda^mi$
lambda_w_ss $\lambda^w$
gamma_cmc_ss $\gamma^{c,mc}$
gamma_imi_ss $\gamma^{i,mi}$
gamma_cd_ss  $\gamma^{c,d}$
gamma_id_ss  $\gamma^{i,d}$
gamma_dc_ss  $\gamma^{d,c}$
gamma_mcc_ss $\gamma^{mc,c}$
eta_mc      $\eta_mc$
eta_mi      $\eta_mi$
k_ss        $k^s$
kbar_ss     $k$
r_k_ss      $r^k$
R_f_ss      $R^f$
R_ss        $R$
y_ss        $y$
i_ss        $i$
%g_ss        
c_d_ss      $c^d$
c_m_ss      $c^m$
i_m_ss      $i^m$
i_d_ss      $i^d$
y_star_ss   $y^*$
pi_star_ss  $\pi^*$
R_star_ss   $R^*$
dS_ss       $\Delta{S}$
w_ss        $w$
k_H_ss      $\frac{k}{H}$
D1          $D_1$
D2          $D_2$
D3          $D_3$
D4          $D_4$
H_ss        $H$
c_ss        $c$
psi_z_ss    $\psi^z$
m_ss        $m$
pi_ss       $\pi$
q_ss        $q$
b_w         $b_w$
eta_0       $\eta_0$
eta_1       $\eta_1$
eta_2       $\eta_2$
eta_3       $\eta_3$
eta_4       $\eta_4$
eta_5       $\eta_5$
eta_6       $\eta_6$
eta_7       $\eta_7$
eta_8       $\eta_8$
% eta_9       $\eta_9$
% eta_10      $\eta_10$
eta_11      $\eta_11$
imp_ss      $IMP$
 
rho_mu_z    $\rho_{\mu^z}$
rho_z       $\rho_{z}$
rho_i       $\rho_{i}$
rho_ztildestar $\rho_{\tilde{z}^*}$
rho_g       $\rho_{g}$
rho_nu      $\rho_{\nu}$
rho_c       $\rho_{c}$
rho_H       $\rho_{H}$
rho_a       $\rho_{a}$
rho_lambda_d  $\rho_{\lambda^{d}}$
rho_lambda_mc $\rho_{\lambda^{m,c}}$
rho_lambda_mi $\rho_{\lambda^{m,i}}$
rho_lambda_x  $\rho_{\lambda^{x}}$

rho_Rstar
sigma_star
kappa_star
rho_pistar
rho_ystar
;


% Parameter values

beta     = 0.9975; %0.999; % discount factor
delta    = 0.013; % depreciation rate
alpha    = 0.23; %(1-0.57); %0.29;  % capital share in production
A_L      = 7.5;   % constant in labour disutility function
sigma_L  = 1.00;  % labor supply elasticity
A_q      = 0.436; %0.3776;
sigma_q  = 10.62;
sigma_a  = 1000000;  % mode: 19.4147 %0000; %0.049; % 1000000;%  capital utilization cost  0.049 - Altig (2003), 1000000 - Adolfson (2007);
b        = 0.708;  % habit formation
phi_a    = 0.252;
phi_s    = 0.5;

% Investment adjustment cost
phi_i       = 8.670;

% Calvo's
theta_w     = 0.690;
theta_d     = 0.891;
theta_mc    = 0.444;
theta_mi    = 0.721;
theta_x     = 0.612;
theta_e     = 0.787;

% Inflation indexation
kappa_w     = 0.5; %0.497;
kappa_d     = 0.217;
kappa_mc    = 0.220;
kappa_mi    = 0.231;
kappa_x     = 0.185;

% Import shares
omega_i     = 0.48; % imported investment share
omega_c     = 0.36; % imported consumption share

% Substitution elasticities
eta_c       = 1.5;  % substitution elasticity consumption
eta_i       = 1.5 ; % substitution elasticity investment
eta_f       = 1.25 ;% substitution elasticity foreign

% Policy rule
rho_r       = 0.881;
r_pi        = 1.73;
r_y         = 0.104;
r_x         = 0;
r_dpi       = 0.310;
r_dy        = 0.128;

% Inflation target persistence
rho_pi   = 0;   % inflation target persistence

% AR(1) shocks' parameters
rho_mu_z        = 0.698;
rho_z           = 0.886;
rho_i           = 0.720;
rho_ztildestar  = 0.992;
rho_c           = 0.892;
rho_H           = 0.676;
rho_a           = 0.955;
rho_lambda_mc   = 0.970;
rho_lambda_mi   = 0.963;
rho_lambda_x    = 0.886;
rho_lambda_d    = 0;
rho_g           = 0.815;
rho_nu          = 0.8;

% Numerical steady state parameters
mu_m_ss  = 1.02;    % money growth
gr       = 0.197;   % G/Y share
nu_ss    = 0.15;    % share of wage bill financed
mu_z_ss  = 1.0085;  % technology growth

pi_star_ss = 1.005;

lambda_d_ss  = 1.1; 
lambda_mc_ss = 1.1; 
lambda_mi_ss = 1.1; 
lambda_w_ss = 1.05; 

rho_Rstar  = 0.9012;
sigma_star = 1.4817;
kappa_star = 0.1944;
rho_pistar = 0.8202;
rho_ystar  = 0.9173;

% Analytical steady state parameters
pi_ss       = mu_m_ss/mu_z_ss;

eta_mc      = lambda_mc_ss/(lambda_mc_ss-1); 

eta_mi      = lambda_mi_ss/(lambda_mi_ss-1); 

gamma_cmc_ss = ((1-omega_c)*((eta_mc-1)/eta_mc)^(1-eta_c)+omega_c)^(1/(1-eta_c));

gamma_imi_ss = ((1-omega_i)*((eta_mi-1)/eta_mi)^(1-eta_i)+omega_i)^(1/(1-eta_i));

gamma_cd_ss = ((1-omega_c)+omega_c*(eta_mc/(eta_mc-1))^(1-eta_c))^(1/(1-eta_c));

gamma_id_ss = ((1-omega_i)+omega_i*(eta_mi/(eta_mi-1))^(1-eta_i))^(1/(1-eta_i));

gamma_dc_ss = 1/gamma_cd_ss;

gamma_mcc_ss = 1/gamma_cmc_ss;

r_k_ss      = (mu_z_ss*gamma_id_ss-beta*(1-delta)*gamma_id_ss)/beta;

R_ss        = (pi_ss*mu_z_ss)/beta; 

R_f_ss      = nu_ss*R_ss+1-nu_ss;

w_ss        = (1-alpha)*lambda_d_ss^(-1/(1-alpha))*alpha^(alpha/(1-alpha))*r_k_ss^(-alpha/(1-alpha))*R_f_ss^(-1);

k_H_ss      = alpha/(1-alpha)*mu_z_ss*w_ss*R_f_ss*r_k_ss^(-1);

D1          = (1-omega_c)*gamma_cd_ss^eta_c+omega_c*gamma_cmc_ss^eta_c;

D2          = (1-gr)/lambda_d_ss*mu_z_ss^(-alpha)*k_H_ss^alpha - ((1-omega_i)*gamma_id_ss^eta_i + omega_i*gamma_imi_ss^eta_i)*(1-(1-delta)/mu_z_ss)*k_H_ss;

D3          = ((1/lambda_w_ss*w_ss)/A_L)^(1/sigma_L);

D4          = ((mu_z_ss-beta*b)/((mu_z_ss-b)))*gamma_cd_ss^(-1);

H_ss        = (D3*D4^(1/sigma_L)*(D2/D1)^(-1/sigma_L))^(sigma_L/(1+sigma_L));

c_ss        = (D2/D1)*H_ss;

psi_z_ss    = 1/c_ss*D4;

q_ss        = (A_q/(psi_z_ss*(R_ss-1)))^(1/sigma_q);

m_ss        = nu_ss*w_ss*H_ss + q_ss;

k_ss        = k_H_ss*H_ss;

kbar_ss     = k_ss;

i_ss        = (1-(1-delta)/mu_z_ss)*k_ss;

c_d_ss      = (1-omega_c)*gamma_cd_ss^eta_c*c_ss;

c_m_ss      = omega_c*gamma_cmc_ss^eta_c*c_ss;

i_d_ss      = (1-omega_i)*gamma_id_ss^eta_i*i_ss;

i_m_ss      = omega_i*gamma_imi_ss^eta_i*i_ss;

imp_ss      = c_m_ss + i_m_ss;

y_ss        = 1/lambda_d_ss*(mu_z_ss)^(-alpha)*(k_H_ss)^alpha*H_ss;

y_star_ss   = omega_c*gamma_cmc_ss^eta_c*c_ss+omega_i*gamma_imi_ss^eta_i*i_ss;

R_star_ss   = (pi_star_ss*mu_z_ss)/beta; 

dS_ss       = pi_ss/pi_star_ss;

% Short-hand parameters
b_w = (lambda_w_ss*sigma_L - (1 - lambda_w_ss))/((1-beta*theta_w)*(1-theta_w));
eta_0 = b_w*theta_w;
eta_1 = (lambda_w_ss*sigma_L - b_w*(1 + beta*(theta_w^2)));
eta_2 = b_w*beta*theta_w;
eta_3 = -b_w*theta_w;
eta_4 = b_w*beta*theta_w;
eta_5 = b_w*theta_w*kappa_w;
eta_6 = -b_w*beta*theta_w*kappa_w;
eta_7 = (1 - lambda_w_ss);
eta_8 = -(1 - lambda_w_ss)*sigma_L;
eta_11 = -(1 - lambda_w_ss);

%==========================================================================
% Model equations
%==========================================================================
model(linear);

%---------------------------------------------------------------------------------------------------
% Domestic Phillips curve
%---------------------------------------------------------------------------------------------------
pi_d = pi_cbar + beta/(1+kappa_d*beta)*(pi_d(+1) - rho_pi*pi_cbar) 
     + kappa_d/(1+kappa_d*beta)*(pi_d(-1) - pi_cbar) 
     - (kappa_d*beta*(1-rho_pi)/(1+kappa_d*beta))*pi_cbar 
     + (((1-theta_d)*(1-theta_d*beta))/(theta_d*(1+kappa_d*beta)))*mc_d + lambda_d;
     
%---------------------------------------------------------------------------------------------------
% Domestic marginal cost
%---------------------------------------------------------------------------------------------------
% mc_d = alpha*r_k + (1-alpha)*(w + R_f) - e_z;
mc_d = alpha*r_k + (1-alpha)*w - e_z;

%---------------------------------------------------------------------------------------------------
% Rental rate of capital
%---------------------------------------------------------------------------------------------------

r_k = w + mu_z - k + H;

%---------------------------------------------------------------------------------------------------
% Real wage
%---------------------------------------------------------------------------------------------------
w = -(1/eta_1)*(eta_0*w(-1) + eta_2*w(+1) + eta_3*(pi_d - pi_cbar) + eta_4*(pi_d(+1) 
  - rho_pi*pi_cbar) + eta_5*(pi_c(-1) - pi_cbar) + eta_6*(pi_c - rho_pi*pi_cbar) + eta_7*psi_z 
  + eta_8*H) + e_H; % + eta_11*e_H); %  + eta_9*tau_y + eta_10*tau_w

%---------------------------------------------------------------------------------------------------
% Imported Consumption Phillips curve
%---------------------------------------------------------------------------------------------------
pi_mc = pi_cbar + (beta/(1+kappa_mc*beta))*(pi_mc(+1) - rho_pi*pi_cbar) 
      + (kappa_mc/(1+kappa_mc*beta))*(pi_mc(-1) - pi_cbar) 
      - (kappa_mc*beta*(1-rho_pi)/(1+kappa_mc*beta))*pi_cbar 
      + (((1-theta_mc)*(1-theta_mc*beta))/(theta_mc*(1+kappa_mc*beta)))*mc_mc + lambda_mc;

%---------------------------------------------------------------------------------------------------    
% Imported Consumption marginal cost
%---------------------------------------------------------------------------------------------------
mc_mc = - mc_x - gamma_xstar - gamma_mcd;

%---------------------------------------------------------------------------------------------------
% Imported Investment Phillips curve
%---------------------------------------------------------------------------------------------------
pi_mi = pi_cbar + (beta/(1+kappa_mi*beta))*(pi_mi(+1) - rho_pi*pi_cbar) 
      + (kappa_mi/(1+kappa_mi*beta))*(pi_mi(-1) - pi_cbar) 
      - (kappa_mi*beta*(1-rho_pi)/(1+kappa_mi*beta))*pi_cbar 
      + (((1-theta_mi)*(1-theta_mi*beta))/(theta_mi*(1+kappa_mi*beta)))*mc_mi + lambda_mi;

%---------------------------------------------------------------------------------------------------
% Imported Investment marginal cost
%---------------------------------------------------------------------------------------------------
mc_mi = - mc_x - gamma_xstar - gamma_mid;

%---------------------------------------------------------------------------------------------------
% Export Phillips curve
%---------------------------------------------------------------------------------------------------

pi_x = (beta/(1+beta))*pi_x(+1)
     + (1/(1+beta))*pi_x(-1)
     + (((1-theta_x)*(1-theta_x*beta))/(theta_x*(1+beta)))*mc_x + lambda_x;
     
%---------------------------------------------------------------------------------------------------
% Export marginal cost
%---------------------------------------------------------------------------------------------------
mc_x = mc_x(-1) + pi_d - pi_x - dS;

%---------------------------------------------------------------------------------------------------
% Consumption Euler equation
%---------------------------------------------------------------------------------------------------
c = ((mu_z_ss*b)/(mu_z_ss^2+beta*(b^2)))*c(-1) + ((mu_z_ss*b*beta)/(mu_z_ss^2+beta*(b^2)))*c(+1) 
  - ((mu_z_ss*b)/(mu_z_ss^2+beta*(b^2)))*(mu_z - beta*mu_z(+1)) 
  - (((mu_z_ss-b)*(mu_z_ss-beta*b))/(mu_z_ss^2+beta*(b^2)))*(psi_z + gamma_cd) 
  + ((mu_z_ss-b)/(mu_z_ss^2+beta*(b^2)))*(-b*beta*e_c(+1)) + e_c; % *(mu_z_ss*e_c - b*beta*e_c(+1));
 
%---------------------------------------------------------------------------------------------------
% Optimal investment
%---------------------------------------------------------------------------------------------------

i = (1/((mu_z_ss^2*phi_i)*(1+beta)))*((mu_z_ss^2*phi_i)*(i(-1) + beta*i(+1)- mu_z + beta*mu_z(+1)) 
  + P_k - gamma_id) + e_i;

%---------------------------------------------------------------------------------------------------
% Price of capital
%---------------------------------------------------------------------------------------------------
P_k = ((beta*(1-delta))/mu_z_ss)*P_k(+1) + (psi_z(+1) - psi_z) - mu_z(+1) 
    + ((mu_z_ss - beta*(1-delta))/mu_z_ss)*r_k(+1);

%---------------------------------------------------------------------------------------------------
% Capacity utilization
%---------------------------------------------------------------------------------------------------
u = 1/sigma_a*r_k;  %- 1/sigma_a*tau_k_ss/(1 - tau_k_ss)*tau_k;

%---------------------------------------------------------------------------------------------------
% Capital services
%---------------------------------------------------------------------------------------------------
u = k - kbar(-1);

%---------------------------------------------------------------------------------------------------
% Capital law-of-motion
%---------------------------------------------------------------------------------------------------
kbar = (1-delta)*1/mu_z_ss*kbar(-1) - (1-delta)*1/mu_z_ss*mu_z + (1-(1-delta)*1/mu_z_ss)*i + e_i;

%---------------------------------------------------------------------------------------------------
% Optimal asset holdings
%---------------------------------------------------------------------------------------------------
psi_z = psi_z(+1) - mu_z(+1) + R - pi_d(+1); 
      
%---------------------------------------------------------------------------------------------------
% Policy rule
%---------------------------------------------------------------------------------------------------
R = rho_r*R(-1) + (1-rho_r)*(pi_cbar + r_pi*(pi_c(-1)-pi_cbar) + r_y*y(-1) + r_x*x(-1)) 
  + r_dpi*(pi_c - pi_c(-1)) + r_dy*(y - y(-1)) + eps_r;

%---------------------------------------------------------------------------------------------------
% Real exchange rate
%---------------------------------------------------------------------------------------------------
x = -omega_c*(gamma_cmc_ss)^(-(1-eta_c))*gamma_mcd - gamma_xstar - mc_x;

%---------------------------------------------------------------------------------------------------
% Nominal exchange rate
%---------------------------------------------------------------------------------------------------
% Standard UIP
% R = dS(+1) + R_star - phi_a*a + e_a;

% Modified UIP 
R = (1-phi_s)*dS(+1) - phi_s*dS + R_star - phi_a*a + e_a;

%---------------------------------------------------------------------------------------------------
% Employment equation
%---------------------------------------------------------------------------------------------------
E = beta/(1+beta)*E(+1) + (1/(1+beta))*E(-1) 
  + ((1-theta_e)*(1-beta*theta_e))/((1+beta)*theta_e)*(H-E);

%---------------------------------------------------------------------------------------------------
% Aggregate resource constraint
%---------------------------------------------------------------------------------------------------
y = (1-omega_c)*gamma_cd_ss^eta_c*c_ss/y_ss*(c+eta_c*gamma_cd) 
  + (1-omega_i)*gamma_id_ss^eta_i*i_ss/y_ss*(i+eta_i*gamma_id) 
  + gr*g + y_star_ss/y_ss*(y_star-eta_f*gamma_xstar+z_tildestar) 
  + r_k_ss*kbar_ss/(y_ss*mu_z_ss)*(k-kbar(-1));

%---------------------------------------------------------------------------------------------------
% Law of motion for Net Foreign Assets
%---------------------------------------------------------------------------------------------------
% With R_star ~= R (and no taxes)

a = -y_star_ss*mc_x - eta_f*y_star_ss*gamma_xstar + y_star_ss*y_star + y_star_ss*z_tildestar 
  + (c_m_ss + i_m_ss)*gamma_f - (c_m_ss*(-eta_c*(1-omega_c)*(gamma_cd_ss)^(-(1-eta_c))*gamma_mcd + c) 
  + i_m_ss*(-eta_i*(1-omega_i)*(gamma_id_ss)^(-(1-eta_i))*gamma_mid + i)) 
  + (pi_star_ss/pi_ss)*(1/beta)*a(-1);
  
%---------------------------------------------------------------------------------------------------
% CPI inflation
%---------------------------------------------------------------------------------------------------
pi_c = ((1-omega_c)*(1/gamma_cd_ss)^(1-eta_c))*pi_d + ((omega_c)*(1/gamma_cmc_ss)^(1-eta_c))*pi_mc;

%---------------------------------------------------------------------------------------------------
% Investment price deflator
%---------------------------------------------------------------------------------------------------
pi_i = ((1-omega_i)*(1/gamma_id_ss)^(1-eta_i))*pi_d + ((omega_i)*(1/gamma_imi_ss)^(1-eta_i))*pi_mi;

%---------------------------------------------------------------------------------------------------
% Exports
%---------------------------------------------------------------------------------------------------
ex = -eta_f*gamma_xstar + y_star + z_tildestar;

%---------------------------------------------------------------------------------------------------
% Imports
%---------------------------------------------------------------------------------------------------
c_m = eta_c*(gamma_cd - gamma_mcd) + c;
i_m = eta_i*(gamma_id - gamma_mid) + i;
imp = (c_m_ss/imp_ss)*c_m + (i_m_ss/imp_ss)*i_m;

i_d = eta_i*(gamma_id) + i;
%---------------------------------------------------------------------------------------------------
% Output
%---------------------------------------------------------------------------------------------------
y = lambda_d_ss*(e_z + alpha*(k - mu_z) + (1-alpha)*H);

%---------------------------------------------------------------------------------------------------
% CPI inflation target
%---------------------------------------------------------------------------------------------------
pi_cbar = rho_pi*pi_cbar(-1) + eps_pi_cbar;

%---------------------------------------------------------------------------------------------------
% Relative prices
%---------------------------------------------------------------------------------------------------
gamma_mcd    = gamma_mcd(-1) + pi_mc - pi_d;
gamma_mid    = gamma_mid(-1) + pi_mi - pi_d;
gamma_xstar  = gamma_xstar(-1) + pi_x - pi_star;
gamma_cd     = (1-(1-omega_c)*(gamma_cd_ss)^(eta_c-1))*gamma_mcd; 
gamma_id     = (1-(1-omega_i)*(gamma_id_ss)^(eta_i-1))*gamma_mid; 
gamma_f      = mc_x + gamma_xstar;

%---------------------------------------------------------------------------------------------------
% Shock processes (13)
%---------------------------------------------------------------------------------------------------
e_c         = rho_c*e_c(-1) + eps_c;
e_i         = rho_i*e_i(-1) + eps_i;
e_a         = rho_a*e_a(-1) + eps_a;
e_z         = rho_z*e_z(-1) + eps_z;
e_H         = rho_H*e_H(-1) + eps_H;
lambda_x    = rho_lambda_x*lambda_x(-1) + eps_x;
lambda_d    = rho_lambda_d*lambda_d(-1) + eps_d;
lambda_mc   = rho_lambda_mc*lambda_mc(-1) + eps_mc;
lambda_mi   = rho_lambda_mi*lambda_mi(-1) + eps_mi;
z_tildestar = rho_ztildestar*z_tildestar(-1) + eps_z_tildestar;
mu_z        = rho_mu_z*mu_z(-1) + eps_mu_z;

%---------------------------------------------------------------------------------------------------
% Goverment spending
%---------------------------------------------------------------------------------------------------
g = rho_g*g(-1) + eps_g;

%---------------------------------------------------------------------------------------------------
% Foreign economy 
%---------------------------------------------------------------------------------------------------

R_star = rho_Rstar*R_star(-1) +(1-rho_Rstar)*(1.5*pi_star + 0.125*y_star) + eps_Rstar;

y_star = y_star(+1) - (1/sigma_star)*(R_star - pi_star(+1)) + e_ystar;

pi_star = beta*pi_star(+1) + kappa_star*y_star + e_pistar;

e_pistar = rho_pistar*e_pistar(-1) + eps_pistar;

e_ystar = rho_ystar*e_ystar(-1) + eps_ystar;

%---------------------------------------------------------------------------------------------------
% Annualised rate identities
%---------------------------------------------------------------------------------------------------
R4      = 4*R_ss*R;
pi_d4   = 4*pi_ss*pi_d;
pi_c4   = 4*pi_ss*pi_c;
pi_mc4  = 4*pi_ss*pi_mc;
pi_mi4  = 4*pi_ss*pi_mi;

%---------------------------------------------------------------------------------------------------
% Measurement equations
%---------------------------------------------------------------------------------------------------
R_      = R + 100*log(R_ss);

pi_c_   = pi_c + 100*log(pi_ss);

pi_cbar_= pi_cbar + 100*log(pi_ss);

pi_i_   = pi_i + 100*log(pi_ss) + me_pi_i;

pi_d_   = pi_d + 100*log(pi_ss) + me_pi_d;

dy_     = y - y(-1) + mu_z + log(mu_z_ss)*100 + me_y  - alpha*(k - k(-1) - kbar(-1) + kbar(-2));

dc_     = ((eta_c*c_d_ss)/(c_m_ss+c_d_ss))*(c_m_ss/c_ss)*((lambda_mc_ss-1)/gamma_cd_ss)*(pi_mc 
        - pi_d) + c - c(-1) + mu_z + log(mu_z_ss + 0.0015)*100 + me_c;
        
di_     = ((eta_i*i_d_ss)/(i_m_ss+i_d_ss))*(i_m_ss/i_ss)*((lambda_mi_ss-1)/gamma_id_ss)*(pi_mi 
        - pi_d) + i - i(-1) + mu_z + log(mu_z_ss + 0.01125)*100 + me_i;
        
dimp_   = (c_m_ss/(c_m_ss+i_m_ss))*(-eta_c*(1-omega_c)*((gamma_cd_ss)^(eta_c-1))*(pi_mc - pi_d) 
        + c - c(-1)) + (i_m_ss/(c_m_ss+i_m_ss))*(-eta_i*(1-omega_i)*((gamma_id_ss)^(eta_i-1))*(pi_mi 
        - pi_d) + i - i(-1)) + mu_z + log(mu_z_ss + 0.0065)*100 + me_imp; 
        
dex_    = -eta_f*(pi_x - pi_star) + y_star - y_star(-1) + z_tildestar - z_tildestar(-1) + mu_z 
        + log(mu_z_ss - 0.0035)*100 + me_ex;  % export growth 2 per cent p.a. over sample

dS_     = dS + 100*log(dS_ss);

dy_star_= y_star - y_star(-1) + z_tildestar - z_tildestar(-1) + mu_z + log(mu_z_ss)*100 + me_ystar;

pi_star_= pi_star + 100*log(pi_star_ss);

R_star_ = R_star + 100*log(R_star_ss);


dE_      = E - E(-1) + log(1.00145)*100 + me_E;

dw_     = w - w(-1) + mu_z + log(mu_z_ss)*100 + pi_d + log(pi_ss)*100 + me_w;


%---------------------------------------------------------------------------------------------------
end;
%---------------------------------------------------------------------------------------------------

%==========================================================================
shocks;
%==========================================================================

var me_w;    stderr	sqrt(0.114)		;	%	 0.15;
var me_E;  	 stderr	sqrt(0.051)		;	%	 0.15;
var me_pi_d; stderr	0; %sqrt(0.264)		;	%	 0.15;
var me_pi_i; stderr	sqrt(0.184)		;	%	 0.15;
var me_y;  	 stderr	sqrt(0.036)		;	%	 0.15;
var me_c; 	 stderr	sqrt(0.053)		;	%	 0.15;
var me_i;  	 stderr	sqrt(0.346)		;	%	 0.15;
var me_imp;  stderr	sqrt(1.364)		;	%	 0.15;
var me_ex;   stderr	sqrt(1.925)		;	%	 0.15;
var me_ystar;stderr	sqrt(0.041)		;	%	 0.15;

var eps_g;      stderr 0.98;


%---------------------------------------------------------------------------------------------------
end;
%---------------------------------------------------------------------------------------------------

%==========================================================================
varobs 
%==========================================================================
R_ 
pi_c_  
pi_cbar_  
dy_ 
dc_ 
di_ 
dy_star_ 
dE_ 
pi_star_ 
R_star_ 
dS_ 
dex_ 
dimp_ 
dw_ 
pi_i_ 
pi_d_ 
; 

%==========================================================================
estimated_params;
%==========================================================================

% Adjustment costs
phi_i,          normal_pdf, 7.694, 1.5;

% Consumption
b,              beta_pdf, 0.650, 0.1;

% Calvo parameters
theta_d,        beta_pdf, 0.8, 0.05;
theta_mc,       beta_pdf, 0.8, 0.05;
theta_mi,       beta_pdf, 0.8, 0.05;
theta_x,        beta_pdf, 0.8, 0.05;
theta_e,        beta_pdf, 0.8, 0.05;

% Indexation
kappa_d,        beta_pdf, 0.75, 0.1;
kappa_mc,       beta_pdf, 0.75, 0.1;
kappa_mi,       beta_pdf, 0.75, 0.1;

% Exchange rate
phi_a,          inv_gamma_pdf, 0.05, inf;
phi_s,          uniform_pdf, , , 0, 1;

% Taylor rules
rho_r,          beta_pdf, 0.8, 0.05;
r_pi,           gamma_pdf, 1.7, 0.15, 1, inf;
r_dpi,          gamma_pdf, 0.3, 0.1;
r_y,            gamma_pdf, 0.25, 0.05;  
r_dy,           gamma_pdf, 0.125, 0.05;  

% Persistence parameters
rho_mu_z,       beta_pdf, 0.85, 0.1;
rho_z,          beta_pdf, 0.85, 0.1;
rho_i,          beta_pdf, 0.85, 0.1;
rho_ztildestar, beta_pdf, 0.85, 0.1;
rho_c,          beta_pdf, 0.85, 0.1;
rho_H,          beta_pdf, 0.85, 0.1;
rho_a,          beta_pdf, 0.85, 0.1;
rho_lambda_mc,  beta_pdf, 0.85, 0.1;
rho_lambda_mi,  beta_pdf, 0.85, 0.1;
rho_lambda_x,   beta_pdf, 0.85, 0.1;

% Structural shocks
stderr eps_mu_z,inv_gamma_pdf, 0.4, inf;
stderr eps_z,   inv_gamma_pdf, 0.7, inf;
stderr eps_i,   inv_gamma_pdf, 0.4, inf;
stderr eps_z_tildestar, inv_gamma_pdf, 0.4, inf;
stderr eps_c,   inv_gamma_pdf, 0.4, inf;
stderr eps_H,   inv_gamma_pdf, 0.2, inf;
stderr eps_a,   inv_gamma_pdf, 0.5, inf; % 4x Adolfson's 0.05
stderr eps_d,   inv_gamma_pdf, 0.3, inf;
stderr eps_mc,  inv_gamma_pdf, 0.3, inf;
stderr eps_mi,  inv_gamma_pdf, 0.3, inf;
stderr eps_x,   inv_gamma_pdf, 0.3, inf;
stderr eps_r,   inv_gamma_pdf, 0.15, inf;
stderr eps_pi_cbar,     inv_gamma_pdf, 0.05, inf;
stderr eps_ystar,       inv_gamma_pdf, 0.2417, inf;
stderr eps_pistar,      inv_gamma_pdf, 0.1640, inf;
stderr eps_Rstar,       inv_gamma_pdf, 0.1411, inf;

%---------------------------------------------------------------------------------------------------
end;
%---------------------------------------------------------------------------------------------------

%==========================================================================
estimation(order=1,datafile=dpss_data_12q4_full,  first_obs=41, nobs=52, plot_priors=1, mh_replic=5000, mh_jscale=0.33, mh_nblocks=1, mode_check); %mode_compute=1,
%==========================================================================

%==========================================================================
%dynare_sensitivity;
%==========================================================================

%==========================================================================
%identification;
%==========================================================================

%==========================================================================
%write_latex_dynamic_model;
%==========================================================================

% stoch_simul(irf=20) R_ pi_c_ pi_cbar_ dy_ dc_ di_ dy_star_ dE_ pi_star_ R_star_ dS_ dex_ dimp_ dw_ pi_i_ pi_d_ ;
